#!/bin/sh

### BEGIN INIT INFO
# Provides:          redis_exporter
# Required-Start:    $remote_fs
# Required-Stop:     $remote_fs
# Should-Start:      $all
# Should-Stop:       $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Exporter for redis metrics.
# Description:       Prometheus exporter for Redis metrics, written in Go.
### END INIT INFO

set -e

. /lib/lsb/init-functions

NAME=redis_exporter
DESC="Prometheus Exporter for Redis metrics"
DAEMON={{ redis_exporter_bin_path }}/redis_exporter
USER={{ redis_exporter_user }}
CONFIG=
PID="{{ redis_exporter_pid_path }}/{{ redis_exporter_pid_file }}"
LOG="{{ redis_exporter_log_path }}/{{ redis_exporter_log_file }}"
GOSU=/usr/local/bin/gosu

{% if redis_exporter_options is defined %}
DAEMON_OPTS="{{ redis_exporter_options }}"
{% else %}
DAEMON_OPTS=
{% endif %}

# Check if DAEMON binary exist
[ -f $DAEMON ] || exit 0

{% if redis_exporter_redis_addr is defined %}
export REDIS_ADDR='{{ redis_exporter_redis_addr  }}'
{% endif %}

{% if redis_exporter_redis_password is defined %}
export REDIS_PASSWORD='{{ redis_exporter_redis_password }}'
{% endif %}

{% if redis_exporter_redis_alias is defined %}
export REDIS_ALIAS='{{ redis_exporter_redis_alias }}'
{% endif %}

service_checks () {
  # Prepare directories
  mkdir -p "{{ redis_exporter_pid_path }}" "{{ redis_exporter_log_path }}"
  chown -R $USER "{{ redis_exporter_pid_path }}" "{{ redis_exporter_log_path }}"

  # Check if PID exists
  if [ -f "$PID" ]; then
    PID_NUMBER=`cat $PID`
    if [ -z "`ps axf | grep ${PID_NUMBER} | grep -v grep`" ]; then
      echo "Service was aborted abnormally; clean the PID file and continue..."
      rm -f "$PID"
    else
      echo "Service already started; skip..."
      exit 1
    fi
  fi
}

start () {
  service_checks $1
  $GOSU $USER $DAEMON $DAEMON_OPTS  > $LOG 2>&1  &
  RETVAL=$?
  echo $! > $PID

  if [ $RETVAL ]; then
    log_end_msg 0
  else
    log_end_msg 1
  fi
}

stop () {
  if start-stop-daemon --retry TERM/5/KILL/5 --oknodo --stop --quiet --pidfile $PID 2>&1 1>$LOG
  then
    log_end_msg 0
    rm $PID
  else
    log_end_msg 1
  fi
}


case "$1" in
  start)
    log_daemon_msg "Starting $DESC -" "$NAME"
    start
    ;;

  stop)
    log_daemon_msg "Stopping $DESC -" "$NAME"
    stop
    ;;

  restart)
    log_daemon_msg "Restarting $DESC -" "$NAME"
    stop
    start
    ;;

  syntax)
    $DAEMON --help
    ;;

  status)
    status_of_proc -p $PID $DAEMON $NAME
    ;;

  *)
    log_action_msg "Usage: /etc/init.d/$NAME {start|stop|restart|syntax|status}"
    ;;
esac

exit 0
